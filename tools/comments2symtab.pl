#!/usr/bin/env perl
#
# Usage: comments2symtab.pl <codegen.trace >codegen.symtab
#
# Takes as input the codegen trace with line information in comments.
# The input can be generated with: ./shell_g  -print_code_stubs -print_builtin_code -print_code  -code_comments >codegen.trace
# 
# This script extract the line information present in comments in codegen.trace,
# comments are of the form, for instance:
# 0xaddress  comment  (/line/GenerateBody/717)
# Which means that code generated at '0xaddress' was generated by the function
# GenerateBody at line 717 in the v8 source files.
#
# The generated symbol table is of the form, one symbol per line, for instance:
# /cod/GenerateBody/717 0xaddress 0xsize
#
# This kind of symbol table can be processed for instance by a PC-sampling
# utility to map an execution address to a "symbol", here the symbol
# starts with '/cod/' in order to tag it as a code generation function symbol
# which is different from a normal symbol of the v8 shell and also different
# from a symbol in the compiled JavaScript Source (JITed symbol).
#

my ($last_addr, $last_symbol);
my ($addr, $symbol);
while(<STDIN>) {
    if (/^(0x\S+)\s+comment\s+ \(\/line\/(\S+)\)/) {
	($addr, $symbol) = (hex($1), $2);
	printf("/cod/%s 0x%x 0x%x\n", $last_symbol, $last_addr, $addr - $last_addr) 
	    if defined($last_symbol) && $addr - $last_addr > 0;
	$last_addr = $addr;
	$last_symbol = $symbol;
    }
}
printf("/cod/%s 0x%x 0x%x\n", $last_symbol, $last_addr, 2)
    if defined($last_symbol);

